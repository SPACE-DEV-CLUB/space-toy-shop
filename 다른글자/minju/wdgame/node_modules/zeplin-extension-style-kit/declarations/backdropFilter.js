"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constants = require("../constants");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var BackdropFilter = /*#__PURE__*/function () {
  function BackdropFilter(filters) {
    _classCallCheck(this, BackdropFilter);

    this.filters = filters;
  }

  _createClass(BackdropFilter, [{
    key: "name",
    get: function get() {
      return _constants.STYLE_PROPS.BACKDROP_FILTER;
    }
  }, {
    key: "equals",
    value: function equals(other) {
      return this.filters.length === other.filters.length && this.filters.every(function (filter, index) {
        var f = other.filters[index];
        return f.args.length === filter.args.length && filter.args.every(function (a, idx) {
          return a.equals(f.args[idx]);
        });
      });
    }
  }, {
    key: "getValue",
    value: function getValue(params) {
      return this.filters.map(function (_ref) {
        var fn = _ref.fn,
            args = _ref.args;
        return "".concat(fn, "(").concat(args.map(function (arg) {
          return arg.toStyleValue(params);
        }).join(" "), ")");
      }).join(" ");
    }
  }]);

  return BackdropFilter;
}();

var _default = BackdropFilter;
exports.default = _default;