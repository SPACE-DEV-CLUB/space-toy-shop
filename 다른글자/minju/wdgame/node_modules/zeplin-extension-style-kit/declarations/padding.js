"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constants = require("../constants");

var _length = _interopRequireDefault(require("../values/length"));

var _fourDirectionalValue = _interopRequireDefault(require("../values/utility/fourDirectionalValue"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var useRemUnit = function useRemUnit(_ref) {
  var useForMeasurements = _ref.useForMeasurements;
  return useForMeasurements;
};

var Padding = /*#__PURE__*/function () {
  function Padding(_ref2) {
    var top = _ref2.top,
        right = _ref2.right,
        bottom = _ref2.bottom,
        left = _ref2.left;

    _classCallCheck(this, Padding);

    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.left = left;
    this.fourDirectionalValue = new _fourDirectionalValue.default({
      top,
      right,
      bottom,
      left
    });
  }

  _createClass(Padding, [{
    key: "name",
    get: function get() {
      return _constants.STYLE_PROPS.PADDING;
    }
  }, {
    key: "equals",
    value: function equals(other) {
      return this.fourDirectionalValue.equals(other.fourDirectionalValue);
    }
  }, {
    key: "getValue",
    value: function getValue(params, variables) {
      return this.fourDirectionalValue.toStyleValue(params, variables);
    }
  }], [{
    key: "Zero",
    get: function get() {
      return new Padding({
        top: new _length.default(0, {
          useRemUnit
        }),
        right: new _length.default(0, {
          useRemUnit
        }),
        bottom: new _length.default(0, {
          useRemUnit
        }),
        left: new _length.default(0, {
          useRemUnit
        })
      });
    }
  }]);

  return Padding;
}();

var _default = Padding;
exports.default = _default;