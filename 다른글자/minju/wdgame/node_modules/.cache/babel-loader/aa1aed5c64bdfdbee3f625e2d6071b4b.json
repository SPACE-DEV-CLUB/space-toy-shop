{"ast":null,"code":"var _jsxFileName = \"/Users/minjukim/Documents/space-toy-shop/\\uB2E4\\uB978\\uAE00\\uC790/minju/wdgame/src/components/App.js\";\nimport React from \"react\";\nimport Card from \"./Card\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const makeGame = (x, y) => {\n    let answer = ~~(Math.random() * x * y);\n    let gameArr = Array(x * y).fill(\"멵\");\n    gameArr[answer] = \"먽\";\n    return gameArr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: makeGame(2, 4).map(e => /*#__PURE__*/_jsxDEV(Card, {\n      children: \"e\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_c = App;\nconst Grid = styled.article``;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/minjukim/Documents/space-toy-shop/다른글자/minju/wdgame/src/components/App.js"],"names":["React","Card","styled","App","makeGame","x","y","answer","Math","random","gameArr","Array","fill","map","e","Grid","article"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,QAAQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,QAAIC,MAAM,GAAG,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgBJ,CAAhB,GAAoBC,CAAtB,CAAd;AACA,QAAII,OAAO,GAAGC,KAAK,CAACN,CAAC,GAAGC,CAAL,CAAL,CAAaM,IAAb,CAAkB,GAAlB,CAAd;AACAF,IAAAA,OAAO,CAACH,MAAD,CAAP,GAAkB,GAAlB;AACA,WAAOG,OAAP;AACD,GALD;;AAOA,sBACE;AAAA,cACGN,QAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR,CAAeS,GAAf,CAAoBC,CAAD,iBAClB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAOD;;KAfQX,G;AAiBT,MAAMY,IAAI,GAAGb,MAAM,CAACc,OAAQ,EAA5B;AACA,eAAeb,GAAf","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  const makeGame = (x, y) => {\n    let answer = ~~(Math.random() * x * y);\n    let gameArr = Array(x * y).fill(\"멵\");\n    gameArr[answer] = \"먽\";\n    return gameArr;\n  };\n\n  return (\n    <>\n      {makeGame(2, 4).map((e) => (\n        <Card>e</Card>\n      ))}\n    </>\n  );\n}\n\nconst Grid = styled.article``;\nexport default App;\n"]},"metadata":{},"sourceType":"module"}